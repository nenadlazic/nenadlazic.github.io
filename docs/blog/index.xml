<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>All tech blogs on </title>
    <link>https://nenadlazic.github.io/blog/</link>
    <description>Recent content in All tech blogs on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Sep 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nenadlazic.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenAI Whisper: Quick Audio-to-Text and Subtitle Workflow</title>
      <link>https://nenadlazic.github.io/blog/blog-whisper-audio-transcription/</link>
      <pubDate>Thu, 25 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/blog-whisper-audio-transcription/</guid>
      <description>&lt;p&gt;Transcribing audio has become essential for creators, developers, and content teams. Whether it&amp;rsquo;s podcasts, YouTube videos, or meeting recordings, having accurate text saves time and makes content more accessible.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;OpenAI Whisper&lt;/strong&gt; is a versatile &lt;strong&gt;speech-to-text tool and library&lt;/strong&gt; that leverages pre-trained models to convert audio into text or subtitles. It supports multiple languages, understands context, and can generate time-coded subtitle files.&lt;/p&gt;&#xA;&lt;p&gt;Whisper is more than just a command-line tool: it integrates with &lt;strong&gt;FFmpeg&lt;/strong&gt;, allowing you to process a wide range of audio and video formats directly. You can use it as a CLI for quick transcriptions, or as a Python library for embedding transcription into custom workflows and applications.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding AI-Powered Backends</title>
      <link>https://nenadlazic.github.io/blog/ai-powered-api/</link>
      <pubDate>Fri, 19 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/ai-powered-api/</guid>
      <description>&lt;p&gt;Large Language Models (LLMs) have become the backbone of modern AI: they can generate text, summarize documents, answer questions, and help automate developer workflows. But an LLM on its own is just a very good statistical text generator. To build useful, reliable systems, we often combine them with software that provides memory, facts, actions, and guardrails.&lt;/p&gt;&#xA;&lt;p&gt;Using LLMs usually means sending data to the cloud which can be expensive, slow, and raise privacy concerns.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding VMAF: Measuring video quality the right way</title>
      <link>https://nenadlazic.github.io/blog/vmaf-introduction/</link>
      <pubDate>Fri, 05 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/vmaf-introduction/</guid>
      <description>&lt;p&gt;When building streaming platforms, testing new codecs, or tuning encoding ladders, one of the hardest questions is: &lt;strong&gt;“How do we objectively measure video quality?”&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Traditional metrics like &lt;strong&gt;PSNR&lt;/strong&gt; (Peak Signal-to-Noise Ratio) and &lt;strong&gt;SSIM&lt;/strong&gt; (Structural Similarity Index) often fail to reflect what viewers actually see. PSNR, for example, is a simple mathematical calculation that measures pixel differences, which means it can give a high score to a video that looks visually poor, while SSIM, though better at assessing structural similarity, can still be deceived by certain video artifacts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to expose Active Directory attributes in Keycloak tokens</title>
      <link>https://nenadlazic.github.io/blog/keycloak-custom-claims-from-ad-users/</link>
      <pubDate>Mon, 18 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/keycloak-custom-claims-from-ad-users/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In modern enterprises, &lt;strong&gt;centralized user directories&lt;/strong&gt; are the backbone of identity management. Whether it’s Active Directory (AD) in large corporations or an LDAP server in smaller setups, the goal is simple: a single source of truth for user identities, used across networks and applications.&lt;/p&gt;&#xA;&lt;p&gt;However, AD by itself is not a full IAM solution. This is where Keycloak comes into play: it acts as a layer that allows applications to leverage these identities for authentication and access management, while also providing the flexibility to enrich tokens with custom attributes from AD.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Keycloak migration scripts: your shortcut to consistent IAM</title>
      <link>https://nenadlazic.github.io/blog/keycloak-migration-scripts/</link>
      <pubDate>Thu, 14 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/keycloak-migration-scripts/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Managing authentication and authorization at scale can be error-prone. Manual clicks in the Keycloak dashboard work for small environments, but as your system grows, replicating configurations across development, staging, and production becomes tedious and risky.&lt;/p&gt;&#xA;&lt;p&gt;Keycloak migration scripts let you treat your IAM configuration as code: versioned, repeatable, and automatable. With scripts, you can apply changes safely, track them in version control, and integrate them into CI/CD pipelines for consistent deployments.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to write release notes</title>
      <link>https://nenadlazic.github.io/blog/how-to-write-release-notes/</link>
      <pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/how-to-write-release-notes/</guid>
      <description>&lt;p&gt;Release notes are one of the most underrated tools in software development. Often overlooked, they can be a powerful way to communicate changes, ensure smoother deployments, and build trust across teams - and even with users.&lt;/p&gt;&#xA;&lt;p&gt;In this post, we’ll walk through:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What release notes are (and what they’re not)&lt;/li&gt;&#xA;&lt;li&gt;When and why to write them&lt;/li&gt;&#xA;&lt;li&gt;Who benefits from them&lt;/li&gt;&#xA;&lt;li&gt;What a good release note should contain&lt;/li&gt;&#xA;&lt;li&gt;A practical example &amp;amp; reusable template&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Whether you&amp;rsquo;re running a microservice architecture or a monolith, releasing internal tools or public APIs - this guide is for you.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reactivity in Vue.js</title>
      <link>https://nenadlazic.github.io/blog/reactivity-in-vue/</link>
      <pubDate>Fri, 25 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/reactivity-in-vue/</guid>
      <description>&lt;p&gt;One of the most powerful features of Vue.js and the reason why it feels so intuitive is its &lt;strong&gt;reactivity system&lt;/strong&gt;. It allows your UI to automatically update when the underlying data changes, without writing a single line of manual DOM manipulation.&lt;/p&gt;&#xA;&lt;p&gt;If you’ve ever built complex user interfaces before reactive frameworks like Vue, you know the pain of keeping the UI in sync with application state manually juggling query selectors, event handlers, and state flags. It&amp;rsquo;s error-prone, hard to scale, and difficult to maintain.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vue.js core concepts you must know</title>
      <link>https://nenadlazic.github.io/blog/vue-core-convepts/</link>
      <pubDate>Fri, 18 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/vue-core-convepts/</guid>
      <description>&lt;p&gt;Vue has captured the hearts of developers with its simplicity, efficiency, and adaptability. Whether you&amp;rsquo;re a newcomer to front-end development or an experienced programmer seeking a new tool, Vue.js offers an intuitive approach to building interactive and dynamic web applications.&lt;/p&gt;&#xA;&lt;p&gt;In this blog post, we&amp;rsquo;ll dive deeper into the &lt;strong&gt;philosophy behind Vue.js&lt;/strong&gt;, understanding why it was designed the way it was and the benefits it brings. After that, we&amp;rsquo;ll walk through the &lt;strong&gt;most crucial core concepts&lt;/strong&gt; essential for getting started and effectively utilizing this powerful framework.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Authentication vs Authorization Explained</title>
      <link>https://nenadlazic.github.io/blog/authentication-vs-authorization/</link>
      <pubDate>Fri, 11 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/authentication-vs-authorization/</guid>
      <description>&lt;h2 id=&#34;introduction--why-this-matters&#34;&gt;Introduction – Why This Matters&lt;/h2&gt;&#xA;&lt;p&gt;Security is one of the most critical aspects of backend development, yet the concepts of authentication and authorization are often confused or mixed up. No matter if you&amp;rsquo;re building a web application, a REST API, or a distributed microservices system, it&amp;rsquo;s essential to know &lt;strong&gt;who the user is&lt;/strong&gt; and &lt;strong&gt;what they&amp;rsquo;re allowed to do&lt;/strong&gt;. This blog post will explain these two fundamental concepts in plain terms, outline how they work together, and offer best practices every backend developer should follow to build secure applications.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting started with Vue.js</title>
      <link>https://nenadlazic.github.io/blog/getting-started-with-vue/</link>
      <pubDate>Fri, 04 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/getting-started-with-vue/</guid>
      <description>&lt;h2 id=&#34;what-is-vuejs&#34;&gt;What is Vue.js?&lt;/h2&gt;&#xA;&lt;p&gt;Vue is a powerful yet easy-to-use JavaScript framework that lets you build dynamic, interactive user interfaces with ease. It works with standard HTML, CSS, and JavaScript, leveraging a clean, component-based structure that helps you craft everything from simple page elements to fully-featured, complex applications - all without the headache.&lt;/p&gt;&#xA;&lt;p&gt;At its core, Vue.js is a progressive framework. It offers incremental adoptability, meaning you can start small by enhancing just a tiny part of your webpage and gradually scale it up to build complete, modern web apps - no need to rewrite everything from scratch!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
