<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Backend on </title>
    <link>https://nenadlazic.github.io/categories/backend/</link>
    <description>Recent content in Backend on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Sep 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nenadlazic.github.io/categories/backend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding AI-Powered Backends</title>
      <link>https://nenadlazic.github.io/blog/ai-powered-api/</link>
      <pubDate>Fri, 19 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/ai-powered-api/</guid>
      <description>&lt;p&gt;Large Language Models (LLMs) have become the backbone of modern AI: they can generate text, summarize documents, answer questions, and help automate developer workflows. But an LLM on its own is just a very good statistical text generator. To build useful, reliable systems, we often combine them with software that provides memory, facts, actions, and guardrails.&lt;/p&gt;&#xA;&lt;p&gt;Using LLMs usually means sending data to the cloud which can be expensive, slow, and raise privacy concerns.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Authentication vs Authorization Explained</title>
      <link>https://nenadlazic.github.io/blog/authentication-vs-authorization/</link>
      <pubDate>Fri, 11 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/authentication-vs-authorization/</guid>
      <description>&lt;h2 id=&#34;introduction--why-this-matters&#34;&gt;Introduction â€“ Why This Matters&lt;/h2&gt;&#xA;&lt;p&gt;Security is one of the most critical aspects of backend development, yet the concepts of authentication and authorization are often confused or mixed up. No matter if you&amp;rsquo;re building a web application, a REST API, or a distributed microservices system, it&amp;rsquo;s essential to know &lt;strong&gt;who the user is&lt;/strong&gt; and &lt;strong&gt;what they&amp;rsquo;re allowed to do&lt;/strong&gt;. This blog post will explain these two fundamental concepts in plain terms, outline how they work together, and offer best practices every backend developer should follow to build secure applications.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
